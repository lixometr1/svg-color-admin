# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ production ]
  pull_request:
    branches: [ production ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  DEPLOY_PATH: /var/www/admin.svg.lixometr.com
  BUILD_SCRIPT: npm run build
  BUILD_SCRIPT_OUTPUT: .
  BRANCH_NAME: production

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Делаем checkout текущей ветки
      - uses: actions/checkout@v2
      # Устанавливаем Node.JS для сборки приложения
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      # # Устанавливаем зависимости для сборки
      # - name: Install Dependencies
      #   run: npm i
      # # Собираем приложение
      # - name: Build Appliction
      #   run: $BUILD_SCRIPT
      # Доставляем собранное приложение на сервер
      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          port: ${{ secrets.DEPLOY_SERVER_PORT }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SECRET_KEY }}
          source: ${{ env.BUILD_SCRIPT_OUTPUT }}
          target: ${{ env.DEPLOY_PATH }}/${{ env.BRANCH_NAME }}
          strip_components: 1
      - name: Print Info
        run: echo "Deployed at https://${BRANCH_NAME}.lixometr.com/"
      - name: Restarting process
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SECRET_KEY }}
          port: ${{ secrets.DEPLOY_SERVER_PORT }}
          script: |
            cd /var/www/admin.svg.lixometr.com/production
            npm i
            npm run build
            pm2 restart ecosystem.config.js

